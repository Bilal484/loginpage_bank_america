function popup(e, d, a, c, f) { var b = '<div id="popup" class="popupPanel"><div class="popupBox" role="dialog"><label class="popupLabel" tabindex="-1">' + e + '</label><div class="paddingHoriz10"><a id="ok" class="popupButton" href="#" role="button">' + d + "</a></div></div></div>"; $("#" + globalObj.pageID).attr("aria-hidden", "true"); $("body").append(b); setDimensions(); if (c < 100) { c = 100 } if (c > globalObj.screenWidth) { c = globalObj.screenWidth } $(".popupBox").css({ width: c + "px" }); $("#popup").show(); resizePopups(); $(".popupBox .popupLabel").trigger("focus"); globalObj.allowScrolling = false; $("#ok").on("click", function (g) { g.preventDefault(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); $("#popup").remove(); globalObj.allowScrolling = true; message = true; if (f !== undefined && typeof f === "function") { f(message) } }) } function popup2(c) { var d = { text: "", header: "", buttonText: "OK", height: "150", width: "250", callback: "" }; var b = $.extend({}, d, c); var a = []; a.push('<div id="popup" class="popupPanel">'); a.push('	<div class="popupBox">'); if (b.header) { a.push('		<label class="popupHeader">' + b.header + "</label>") } a.push('		<label class="popupLabel normal">' + b.text + "</label>"); a.push('		<div class="paddingHoriz10">'); a.push('			<a id="ok" class="popupButton" href="#" role="button">' + b.buttonText + "</a>"); a.push("		</div>"); a.push("	</div>"); a.push("</div>"); $("#" + globalObj.pageID).attr("aria-hidden", "true"); $("body").append(a.join("\n")); setDimensions(); if (b.width < 100) { b.width = 100 } if (b.width > globalObj.screenWidth) { b.width = globalObj.screenWidth } $(".popupBox").css({ width: b.width + "px" }); $("#popup").show(); resizePopups(); $(".popupBox").trigger("focus"); globalObj.allowScrolling = false; $("#ok").on("click", function (f) { f.preventDefault(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); $("#popup").remove(); globalObj.allowScrolling = true; message = true; if (b.callback !== undefined && typeof b.callback === "function") { b.callback(message) } }) } function encryptA(c, b) { var a = new JSEncrypt(); a.setPublicKey(b); return a.encrypt(c) } function decryptA(c, b) { var a = new JSEncrypt(); a.setPrivateKey(b); return a.decrypt(c) } function loadWarplet(c, a, d, b) { $("head").append('<embed id="WarpAdapter" src="' + c + '"></embed>'); if (typeof WARP_ADAPTER !== "function") { $.ajax({ url: c, cache: true }).complete(function () { WARP_ADAPTER.showWarpletInDiv(a, d, b) }) } else { WARP_ADAPTER.showWarpletInDiv(a, d, b) } } function confirmPopup(f, b, c, a, e, g) { var d = '<div id="popup" class="popupPanel"><div class="popupBox" role="dialog"><label class="popupLabel" tabindex="-1">' + f + '</label><div class="paddingHoriz10 col2"><a id="agree" class="popupButton" href="javascript:void(0);" role="button">' + b + '</a></div><div class="paddingHoriz10 col2"><a id="dontagree" class="popupButton" href="javascript:void(0);" role="button">' + c + "</a></div></div></div>"; $("#" + globalObj.pageID).attr("aria-hidden", "true"); $("body").append(d); setDimensions(); if (e < 250) { e = 250 } if (e > globalObj.screenWidth) { e = globalObj.screenWidth } $(".popupBox").css({ width: e + "px" }); $("#popup").show(); resizePopups(); $(".popupBox .popupLabel").trigger("focus"); globalObj.allowScrolling = false; $("#agree").on("click", function (h) { $("#agree").attr("disabled", true); h.stopImmediatePropagation(); h.preventDefault(); $("#popup").remove(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); globalObj.allowScrolling = true; message = true; if (g !== undefined && typeof g === "function") { g(message) } }); $("#dontagree").on("click", function (h) { h.preventDefault(); $("#popup").remove(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); globalObj.allowScrolling = true; message = false; if (g !== undefined && typeof g === "function") { g(message) } }) } function confirmbottomPopup(f, b, c, a, d, g) { var e = '<div id="bottomPopup" class="bottomPopupPanel" role="dialog"><div class="bottomPopupBox">'; if (f !== "" && typeof f !== "undefined") { e += '<label class="bottompopupLabel" tabindex="-1">' + f + "</label>" } e += '<a id="agree" class="btn" href="javascript:void(0);" role="button">' + b + '</a><a id="dontagree" class="btn negative" href="javascript:void(0);" role="button">' + c + "</a></div></div>"; if ($("#bottomPopup").length > 0) { return false } $("#" + globalObj.pageID).attr("aria-hidden", "true"); showLoading(); $("body").append(e); $(".spinner").hide(); $("#bottomPopup").slideDown(100); $("#bottomPopup .bottompopupLabel").trigger("focus"); $("#agree").on("click", function (h) { h.preventDefault(); hideLoading(); $("#bottomPopup").remove(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); globalObj.allowScrolling = true; if (g !== undefined && typeof g === "function") { g(true) } }); $("#dontagree").on("click", function (h) { h.preventDefault(); hideLoading(); $("#bottomPopup").remove(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); globalObj.allowScrolling = true; if (g !== undefined && typeof g === "function") { g(false) } }) } function actionSheetPopup(b) { var g = []; if (b.mode === "confirmbottom") { topElement = "bottomPopup"; topElementClass = "bottomPopupPanel"; boxClass = "bottomPopupBox"; if (b.messageTextAlign === "left") { labelClass = "bottompopupLabelLeft" } else { labelClass = "bottompopupLabel" } } if (b.mode === "confirm") { topElement = "popup"; topElementClass = "popupPanel"; boxClass = "whiteBGpopupBox"; labelClass = "whiteBGpopupLabel" } if (b.mode === "redirect") { topElement = "popup"; topElementClass = "popupPanel"; boxClass = "whiteBGpopupBox"; labelClass = "whiteBGpopupLabel" } var d = '<div id="' + topElement + '" class="' + topElementClass + '"  role="dialog"><div class="' + boxClass + '">'; if (b.message !== "" && typeof b.message !== "undefined") { d += '<label class="' + labelClass + '"  tabindex="-1">' + b.message + "</label>" } for (var c = 0; c < b.buttons.length; c++) { var f = false; var e = ""; if (b.mode === "confirm" || b.mode === "redirect") { f = true } if (b.types[c] === "destructive") { g[c] = true; if (b.mode === "redirect") { e += b.mode } else { e += b.types[c] } } else { if (b.types[c] === "negative") { g[c] = false; if (!f) { e += b.types[c] } } else { g[c] = false; f = false } } e += (" " + ((f) ? "popupButton" : "btn")); var a = '<a id="actionSheetButton' + c + '" data-button-index="' + c + '" class="' + $.trim(e) + '" href="javascript:void(0);" role="button">' + b.buttons[c] + "</a>"; if (f) { a = '<div class="paddingHoriz10 col2">' + a + "</div>" } d += a } d += "</div></div>"; setDimensions(); if (b.width < 250 && b.buttons.length === 2) { b.width = 250 } if (b.width < 100 && b.buttons.length === 1) { b.width = 100 } if (b.mode === "confirmbottom") { showLoading(); $("body").append(d); $(".spinner").hide(); $("#" + topElement).slideDown(100); resizePopups() } else { if (b.mode === "confirm" || b.mode === "redirect") { $("body").append(d); if (b.width > globalObj.screenWidth) { b.width = globalObj.screenWidth } $("." + boxClass).css({ width: b.width + "px" }); $("#" + topElement).show() } } $("#" + topElement + " ." + labelClass).trigger("focus"); $("#" + globalObj.pageID).attr("aria-hidden", "true"); globalObj.allowScrolling = false; $("[id^='actionSheetButton']").on("click", function (i) { i.preventDefault(); hideLoading(); $("#loading").hide(); $("#" + topElement).remove(); $("#" + globalObj.pageID).attr("aria-hidden", "false"); globalObj.allowScrolling = true; if ($(this).hasClass("redirect")) { window.location.hash = b.url } else { var h = $(this).data("button-index"); b.callbackList[h](g[h]) } }) } function showSplash() { if (typeof $("#page").data().messages === "object") { $.each($("#page").data().messages, function (b, c) { if (c.presentationMode === "BANNER") { if (pageObj.pageName) { if (sessionStorage.getItem("isCasRoutedInSession") !== null && sessionStorage.getItem("isCasRoutedInSession") != undefined) { var a = sessionStorage.getItem("isCasRoutedInSession").split("|"); if (a.length > 0) { $.each(a, function (d, e) { if ((e === "BANNER" || e === "CLOSEXCLICK") && (typeof c.displayFrequency == "undefined" || c.displayFrequency !== "ALWAYS")) { pageObj.sasiflag = false } }) } } if (c.relatedTargetPage.indexOf(pageObj.pageName) !== -1 && pageObj.sasiflag) { if (c.presentationFormat == "standard_cta_yellow") { showBannerMessage(c) } else { if (pageObj.pageName == "Accounts:Home" && pageObj.currentPage != "sec_preference") { showSASIBanner(c) } } } } } }); pageObj.pageName = "" } } function enablePaymentsAndInvoicing() { var a = false; $.each(globalObj.moduleParameters, function (b, c) { if (c.module === "PaymentsAndInvoicing" && c.indicator === true) { a = true; return false } }); if (a) { $(".slidemenu_menu .menuItem.billpay").hide() } else { $(".slidemenu_menu .menuItem.billdotcom").hide() } $(".billdotcom").on("click touchstart", function (b) { b.preventDefault(); window.location.href = globalObj.spartaRedirectionURI + "myaccounts/omni/brain/v1/redirect/bdchome?source=overview" }) } function isRavenPilotEligible() { let ravenPilot = false; $.each(globalObj.moduleParameters, function (a, b) { if (b.module === "PayAndTransfer" && b.name === "PayAndTransferEnabled" && b.indicator === true) { ravenPilot = true } }); if (!ravenPilot) { $(".slidemenu_menu .menuItem.payAndTransfer").hide() } return ravenPilot } function enablePayAndTransfer() { $(".slidemenu_menu .menuItem.billpay").hide(); $(".slidemenu_menu .menuItem.billdotcom").hide(); $(".slidemenu_menu .menuItem.transfers").hide(); $(".slidemenu_menu .menuItem.payAndTransfer").show(); $(".payAndTransfer").on("click touchstart", function (a) { a.preventDefault(); window.location.href = globalObj.spartaRedirectionURI + "myaccounts/omni/brain/v1/redirect/paymentactivity?request_locale=en-us&source=overview" }) } function showBannerMessage(d, b) { var f = ""; if (typeof b === "undefined" || b === "") { b = "TL_Info" } var e = d.presentationFormat.split("_"); f += '<div class = "banner ' + b + " "; for (var c = 0; c < e.length; c++) { f += e[c] + " " } f += '">'; if (typeof d.mediaLinks != "undefined") { $.each(d.mediaLinks, function (g, h) { if (h.name == "icon") { f += '<img  class = "iconBanner" height = "22px" width = "22px" alt="warning icon" src="' + mobilewebconfig.imageLinks[h.url] + '" />' } }) } if (typeof d.shortDescription != "undefined") { f += '<div class = "shortdescription">' + d.shortDescription + "</div>" } if (typeof d.shortDescription != "undefined") { f += '<div class = "longDescription ">' + d.longDescription + "</div>" } if (typeof d.links != "undefined") { f += '<div class = "bannerLinks"><ul>'; var a = d.links.length - 1; $.each(d.links, function (h, g) { f += '<li><a href="' + g.url + '" alt="' + g.urlalttext + '" busEventURL="' + g.eventURL + '">' + g.label + "</a></li>"; f += "</ul>" }) } f += "</div></div>"; $("#SASI_banner_container").html(f); bannerTemplateStyling(); $("#SASI_banner_container a").on("click", function (l) { l.preventDefault(); var j = $(this).attr("href"); var i = false; var m = ""; var h = ""; var k = ""; function g() { $.each(globalObj.accountList, function (o, r) { var q = $(r).attr("identifier"); var n = $(q).attr("adx"); if (n === m) { h = $(q).attr("category"); k = $(r).attr("displayName") } }) } setClipParameters(j); if (j.indexOf("linkedIdentifier=") > 0 && j.indexOf("identifier=") > 0) { i = true; m = getParameterByName(j, "linkedIdentifier"); g(); m = getParameterByName(j, "identifier") } else { if (j.indexOf("identifier=") > 0) { i = true; m = getParameterByName(j, "identifier"); g() } } if (i) { j = j.split("?")[0] } if (j !== "") { if (j.indexOf("http") !== -1) { confirmPopup("You&apos;ll be opening a new browser window and continuing to another website that we don&apos;t own or operate, so please refer to the website&apos;s posted privacy policy and terms of use.<br/><br/>Continue?", "Yes", "No", 200, 200, function (n) { if (n) { window.open(j) } }) } else { if (j.indexOf("tel:") !== -1) { window.location.href = j } else { if (j.indexOf("bofa://") !== -1) { if (i) { window.location.hash = mobilewebconfig.splashLinks[j]; applicationObj.favAccountInfo.adx = m; applicationObj.favAccountInfo.acctCategory = h; applicationObj.favAccountInfo.acctName = k; if (typeof $("#page").data().messages === "object") { $.each($("#page").data().messages, function (n, o) { if (o.presentationMode === "FULLPAGE") { if (typeof o.links != "undefined") { $.each(o.links, function (r, q) { if (q.url.indexOf(m) > 0) { var s = q.label; if (s.length > 4) { applicationObj.favAccountInfo.acctLastFour = s.substring(s.length - 4) } } }) } } }) } } else { window.location.hash = "#sasi?app=splash&id=" + mobilewebconfig.splashLinks[j] } } else { globalObj.transitionEffect = "slideUpTrans"; window.location.hash = "#sasi?app=splash&id=" + j } } } } }) } function bannerTemplateStyling() { $(".banner.cta a").addClass("btn btnsmall") } function showSASIBanner(f, g) { var h = ""; var j = ""; var a = ""; var c = '<a id="adaMessage" class="adaHidden" href="javascript:void(0)" role="text">'; var d = ["ALERT", "INFO", "AWARE", "FEATURE"]; var b = false; if (typeof g === "undefined" || g === "") { g = "TL_Info" } var j = f.presentationFormat.split("_"); h += '<div class = "regularBanner ' + g + " "; for (var e = 0; e < j.length; e++) { h += j[e] + " "; $.each(d, function (i, k) { if (j[e] === k) { c += k } }) } h += '">'; if (typeof f.mediaLinks != "undefined") { $.each(f.mediaLinks, function (i, k) { if (k.name == "bannerIcon") { h += '<img  class = "splashBannerIcon" height = "22px" width = "22px" src="' + mobilewebconfig.imageLinks1[k.url] + '" />' } if (k.name == "closeImage" || k.name == "closeLink") { a += '<img  height = "22px" width = "22px" src="' + mobilewebconfig.imageLinks1[k.url] + '" />'; b = true } }) } if (typeof f.shortDescription != "undefined") { h += '<div class = "shortDescription">' + f.shortDescription + "</div>"; c += "," + f.shortDescription } if (typeof f.longDescription != "undefined") { h += '<div class = "longDescription ">' + f.longDescription + "</div>" } h += "</div>"; $("#SASI_banner_container").html(h); if (typeof f.links !== "undefined") { $.each(f.links, function (k, i) { if (i.name === "closeLink") { $("#SASI_banner_container").prepend('<a class = "splashCloseIcon" href="' + i.url + '" alt="' + i.urlalttext + '" busEventURL="' + i.eventURL + '">' + a + "</a>") } else { if (i.name === "bannerTapLink" || i.name === "bannerTapLink2") { var l = $('#SASI_banner_container a[href="' + i.name + '"]'); l.attr("busEventURL", i.eventURL); l.attr("href", i.url) } } }) } $("#SASI_banner_container").prepend(c); $("#adaMessage").trigger("focus"); $("#SASI_banner_container a").on("click", function (m) { m.preventDefault(); var k = $(this).attr("href"), l = $(this).attr("busEventURL"); if (typeof l != "undefined" && l !== "") { sasiBusEvent(l) } if (b && (typeof f.displayFrequency == "undefined" || f.displayFrequency !== "ALWAYS")) { pageObj.sasiflag = false } if (k !== "") { if (k.indexOf("http") !== -1) { confirmPopup("You&apos;ll be opening a new browser window and continuing to another website that we don&apos;t own or operate, so please refer to the website&apos;s posted privacy policy and terms of use.<br/><br/>Continue?", "Yes", "No", 200, 200, function (n) { if (n) { window.open(k) } }) } else { if (k.indexOf("tel:") !== -1) { window.location.href = k } else { if (k === "bofa://close") { hideMessage("SASI_banner_container"); var i = sessionStorage.getItem("isCasRoutedInSession") ? sessionStorage.getItem("isCasRoutedInSession") + "CLOSEXCLICK|" : "CLOSEXCLICK|"; sessionStorage.setItem("isCasRoutedInSession", i); if (typeof f.displayFrequency == "undefined" || f.displayFrequency !== "ALWAYS") { pageObj.sasiflag = false } } else { if (k.indexOf("bofa://Message") !== -1) { window.location.hash = "#sasi?app=splash&id=" + k.substring(15) } else { if (k.indexOf("bofa://makeapaymentlink") !== -1 || k.indexOf("bofa://ViewAccounts") !== -1 || k.indexOf("bofa://ViewPaymentDetailslink") !== -1) { var i = sessionStorage.getItem("isCasRoutedInSession") ? sessionStorage.getItem("isCasRoutedInSession") + "BANNER|" : "BANNER|"; sessionStorage.setItem("isCasRoutedInSession", i); setTimeout(function () { window.location.href = getSpartaUrl(k, "cas") }, 2000) } else { if (k.indexOf("bofa://ViewRecoveryAccounts") !== -1 || k.indexOf("bofa://ViewContactInfo") !== -1 || k.indexOf("bofa://Accounts:RecoveryAccountsDetails") !== -1 || k.indexOf("bofa://Accounts:RecoveryMakePayment") !== -1 || k.indexOf("bofa://Accounts:RecoveryMakePaymentNew") !== -1 || k.indexOf("bofa://Accounts:RecoveryAccountsCollections") !== -1) { setTimeout(function () { window.location.href = getSpartaUrl(k, "recovery") }, 2000) } else { if (k.indexOf("target=checkfraud") !== -1) { setTimeout(function () { window.location.href = getSpartaDomain() + k }, 2000) } else { if (k.indexOf("bofa://") !== -1) { window.location.hash = "#sasi?app=splash&id=" + mobilewebconfig.splashLinks[k] } else { globalObj.transitionEffect = "slideUpTrans"; window.location.hash = "#sasi?app=splash&id=" + k } } } } } } } } } }) } function getSpartaUrl(h, c) { var a = "", f = h.split("&adx="), b = f[1] ? "&adx=" + f[1] : "", d = globalObj.env, g = new RegExp("mservice-darkpod"), i = g.test(d), e = ""; if (i) { e = globalObj.env.replace("mservice-darkpod", "secure") } else { e = globalObj.env.replace("mservice", "secure") } if (c === "cas") { a = sessionStorage.getItem("isCasRoutedInSession") ? sessionStorage.getItem("isCasRoutedInSession") + "BANNER|" : "BANNER|"; sessionStorage.setItem("isCasRoutedInSession", a) } return e + mobilewebconfig.splashLinks[f[0]] + b } function getSpartaDomain() { var d = globalObj.env, c = new RegExp("mservice-darkpod"), a = c.test(d), b = ""; if (a) { b = globalObj.env.replace("mservice-darkpod", "secure") } else { b = globalObj.env.replace("mservice", "secure") } return b } function splashMessage(c, f, i, e, b, g, d) { var a = false; if (typeof d === "undefined" || d === "") { d = "TL_Info" } if (typeof e !== "undefined" && e.substring(e.length - 1, e.length) === "X") { e = e.substring(0, e.length - 1); a = true } e = e.toLowerCase(); var h = ""; h += '<a id="adaMessage" class="adaHidden" href="javascript:void(0)" role="text"></a>'; if (a) { h += '<a class="closeIcon" href="javascript:void(0);" title="Close message" role="button"></a>' } h += '<div class="splashText ' + d + '" aria-hidden="true">'; if (f !== "") { h += '<span class="fontBold">' + f + "<br/></span>" } h += "<span>" + i + "</span></div>"; $("#" + c).removeClass().addClass("splashMessage").addClass(e + "Splash"); $("#" + c).removeAttr("style"); $("#" + c).html(h); if (a) { $(".closeIcon").on("click", function (l) { l.preventDefault(); hideMessage(c); pageObj.sasiflag = false; var j = queryString(g, "action"); var n = queryString(g, "offerStatus"); var m = queryString(g, "adlink"); var k = g.replace("action=" + j, "action=CloseX"); k = k.replace("offerStatus=" + n, "offerStatus=Refused"); k = k.replace("adlink=" + m, "adlink=closeXclick"); sasiBusEvent(k) }) } $("#" + c + " .splashText a").on("click", function (k) { k.preventDefault(); var j = $(this).attr("href"); if (b !== "") { if (b.indexOf("http") !== -1) { confirmPopup("You&apos;ll be opening a new browser window and continuing to another website that we don&apos;t own or operate, so please refer to the website&apos;s posted privacy policy and terms of use.<br/><br/>Continue?", "Yes", "No", 200, 200, function (l) { if (l) { window.open(b) } }) } else { if (b.indexOf("tel:") !== -1) { window.location.href = b } else { globalObj.transitionEffect = "slideUpTrans"; window.location.hash = "#sasi?app=splash&id=" + b } } } if (j !== "#") { window.open(j) } sasiBusEvent(g); if (a) { pageObj.sasiflag = false } }); $("#adaMessage").html(e + "," + $(".splashText span:eq(0)").text() + "," + $(".splashText span:eq(1)").text()); $("#adaMessage").trigger("focus") } function loadModule(a) { if (a.cssName) { $("head").append('<link rel="stylesheet" href="modules/' + a.name + "/" + a.version + "/css/" + a.cssName + '">') } if (a.htmlName) { $.ajax({ url: "modules/" + a.name + "/" + a.version + "/html/" + a.htmlName, dataType: "text", cache: true }).done(function (b) { if ($(a.element).length > 0) { $(a.element).html(b) } else { $("." + a.element).html(b) } if (a.jsName) { loadModuleJS(a) } }).fail(function () { alert("Could not load module " + a.name + " " + a.htmlName) }) } else { if (a.jsName) { loadModuleJS(a) } } } function loadModuleJS(a) { $.ajax({ url: "modules/" + a.name + "/" + a.version + "/js/" + a.jsName, dataType: "script", cache: true }).done(function () { if (typeof a.callback === "function") { a.callback() } }).fail(function () { alert("Could not load module " + a.name + " " + a.jsName) }) } function getPageFooter() { if (typeof pageFooter === "undefined") { var a = { name: "boa_footer", version: "v1", cssName: "footer.css", htmlName: "", jsName: "footer.js", element: "footer", callback: function () { footerWrapper() } }; loadModule(a) } else { footerWrapper() } } function footerWrapper(a) { pageFooter.footerDefault(a) } function loadTemplate(d, b, a) { var e = Handlebars.compile(d); var c = e(b); $(a).append(c) } function leavingAppSignOff(b) { globalObj.allowRefresh = true; if (globalObj.isUserAuthenticated) { disposeObjects(); eliminateAuthVariables(); if (typeof slidemenuObj.setMenuItemsOff === "function") { slidemenuObj.setMenuItemsOff() } var c = globalObj.env + "/mgateway/v1/signOff"; var d = ""; globalObj.isUserAuthenticated = false; if (b.indexOf("medallia") > -1) { var a = "&GSID=" + getCookie("GSID"); b = b + a } makeServiceCall(c, d, function () { if (b.indexOf("medallia") > -1) { window.open(b); window.location.href = mobilewebconfig.appConfig.mobilewebPage } else { window.location.href = b } }) } else { window.location.href = b } } function isValidEntity(a) { var c = String.fromCharCode(a); var b = /[ !$%^&"<>:\[\]\\]+$/; if ((a === null) || (a === 0) || (a === 8) || (a === 9) || (a === 13) || (a === 27)) { return true } if (!b.test(c)) { return true } else { return false } } function isValidCharWithUnderscore(a) { var c = String.fromCharCode(a); var b = /[a-zA-Z0-9_]+$/; if ((a === null) || (a === 0) || (a === 8) || (a === 9) || (a === 13) || (a === 27)) { return true } if (b.test(c)) { return true } else { return false } } function isAlphaNumericWithSpaces(a) { var c = String.fromCharCode(a); var b = /^[a-zA-Z0-9 ]+$/; if ((a === null) || (a === 0) || (a === 8) || (a === 9) || (a === 13) || (a === 27)) { return true } if (b.test(c)) { return true } else { return false } } function isValidChar(a) { var c = String.fromCharCode(a); var b = /[a-zA-Z0-9]+$/; if ((a === null) || (a === 0) || (a === 8) || (a === 9) || (a === 13) || (a === 27)) { return true } if (b.test(c)) { return true } else { return false } } function isAlphaStr(a) { var b = /^[a-zA-Z]+$/; if (b.test(a)) { return true } else { return false } } function isAlphaNumWithUnderscoreStr(a) { var b = /^[a-zA-Z0-9_]+$/; if (b.test(a)) { return true } else { return false } } function isAlphaNumWithSpacesStr(a) { var b = /^[a-zA-Z0-9 ]+$/; if (b.test(a)) { return true } else { return false } } function isDOB(a) { var b = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/; if (b.test(a)) { return true } else { return false } } function isDate(b) { b = b.replace(/-/g, "/"); var c = /^(0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[01])[/](19|20)\d\d$/; var a = /^(19|20)\d\d[/](0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[01])$/; if (c.test(b) || a.test(b)) { var e = Date.parse(b); if (isNaN(e)) { return false } else { return true } } else { return false } } function isLessThan13(b) { var c = Date.parse(b); var a = new Date(); a.setFullYear(a.getFullYear() - 13); if (c > a) { return true } else { return false } } function isValidPasscodeSpecialStr(a) { var b = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9~@#*()\{\}|;?\/,._=\-+]+)$/; if (b.test(a)) { return true } else { return false } } function isValidPasscodeNewSpecialStr(a) { var b = new RegExp("(?=.*[^a-zA-Z])(?=.*[^0-9])^[a-zA-Z0-9@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]+$"); if (b.test(a)) { return true } else { return false } } function addAuthValidationRegexes() { applicationObj.oidspecialCharRegex = new RegExp("(?!^\\d+$)(?!^[@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]+$)^[a-zA-Z0-9@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]{1,32}$"); applicationObj.oidRangeRegex = new RegExp("^.{6,32}$"); applicationObj.passcodespecialCharRegex = new RegExp("^[a-zA-Z0-9@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]+$"); applicationObj.passcodeRangeRegex = new RegExp("^.{8,20}$"); applicationObj.onNumberOneLetterRegex = new RegExp("(?=.*\\d)(?=.*[a-zA-Z])"); applicationObj.noAllNumbersRegex = new RegExp("^[0-9]*$"); applicationObj.passcodeKeyUpRegex = new RegExp("^[a-zA-Z0-9@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]+$"); applicationObj.oldPasscodeSpecialCharRegex = new RegExp("^[^$<>&\\^![\\]]*$"); applicationObj.oneUpCaseOneLowCaseOneNumberRegex = new RegExp("(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])"); applicationObj.nonRepeating3CharRegex = new RegExp("^$|([a-zA-Z0-9])\\1{3,}", "i"); app.getFeatureSwitches().then(function (a) { if (typeof a.featureSwitch_NewPasscodeStandards !== "undefined" && a.featureSwitch_NewPasscodeStandards == true) { globalObj.newPasscodeStandardsSwitch = a.featureSwitch_NewPasscodeStandards.toString() } else { globalObj.newPasscodeStandardsSwitch = "false" } }).fail(function () { globalObj.newPasscodeStandardsSwitch = "false" }) } function initiatedynamicFormatChecker() { var b = "<div class='paddingVert10 paddingHoriz12'><p class='fontBold'>Your Online ID must be:</p><div class='paddingVert10'><img id='OIDcond1' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>6 to 32 characters</span></div><div class='paddingVert10'><img id='OIDcond2' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>All letters OR a combination of letters, numbers and any of these special characters @ # * ( ) + = { } / ? ~ ; , . - _</span></div></div>"; var a = "<div class='paddingVert10 paddingHoriz12'><p class='fontBold'>Your Passcode must:</p><div class='paddingVert10'><img id='passcond1' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>Be 8 to 20 characters</span></div><div class='paddingVert10'><img id='passcond2' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>Use at least 1 letter and 1 number</span></div><div class='paddingVert10'><img id='passcond3' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>Use only these special characters @ # * ( ) + = { } / ? ~ ; , . - _</span></div></div>"; var c = "<div class='paddingVert20  paddingHoriz121'><p class='fontBold1'>Your new Passcode must:</p><div class='paddingVert10'><img id='passcond1' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>Contain 8 to 20 characters</span></div><div class='paddingVert10'><img id='passcond2' src='images/Xmark@2x.png' width='11px'><span class='paddingLeft7'>Have at least 1 uppercase letter, 1 lowercase letter and 1 number</span></div><div class='paddingVert10'><img id='passcond3' src='images/checkmark@2x.png' width='11px'><span class='paddingLeft7'>Not repeat the same number or letter more than 3 times</span></div><div class='paddingVert10'><img id='passcond4' src='images/checkmark@2x.png' width='11px'><span class='paddingLeft7'>Not include spaces, and contain only the following special characters: @ # * ( ) + = { } / ? ~ , . -</span></div></div>"; if ($("#oidChecker").length > 0 && $("#oidChecker").html() === "") { $("#oidChecker").html(b) } if ($("#passcodeChecker").length > 0 && $("#passcodeChecker").html() === "") { if (typeof globalObj.newPasscodeStandardsSwitch !== "undefined" && globalObj.newPasscodeStandardsSwitch !== "true") { $("#passcodeChecker").html(a) } else { $("#passcodeChecker").html(c) } } } function onlineIDFormatChecker(a, b) { if (applicationObj.oidspecialCharRegex.test(a)) { $("#OIDcond2").attr("src", "images/checkmark@2x.png") } else { $("#OIDcond2").attr("src", "images/Xmark@2x.png") } if (applicationObj.oidRangeRegex.test(a)) { $("#OIDcond1").attr("src", "images/checkmark@2x.png") } else { $("#OIDcond1").attr("src", "images/Xmark@2x.png") } } function passcodeFormatChecker(a, b) { if (applicationObj.passcodeRangeRegex.test(a)) { $("#passcond1").attr("src", "images/checkmark@2x.png") } else { $("#passcond1").attr("src", "images/Xmark@2x.png") } if (typeof globalObj.newPasscodeStandardsSwitch !== "undefined" && globalObj.newPasscodeStandardsSwitch !== "true") { if (applicationObj.onNumberOneLetterRegex.test(a)) { $("#passcond2").attr("src", "images/checkmark@2x.png") } else { $("#passcond2").attr("src", "images/Xmark@2x.png") } if (applicationObj.passcodespecialCharRegex.test(a)) { $("#passcond3").attr("src", "images/checkmark@2x.png") } else { $("#passcond3").attr("src", "images/Xmark@2x.png") } } else { if (applicationObj.oneUpCaseOneLowCaseOneNumberRegex.test(a)) { $("#passcond2").attr("src", "images/checkmark@2x.png") } else { $("#passcond2").attr("src", "images/Xmark@2x.png") } if (!applicationObj.nonRepeating3CharRegex.test(a) || $.trim(a) == "") { $("#passcond3").attr("src", "images/checkmark@2x.png") } else { $("#passcond3").attr("src", "images/Xmark@2x.png") } if (applicationObj.passcodespecialCharRegex.test(a) || ($.trim(a) == "" && a !== " ")) { $("#passcond4").attr("src", "images/checkmark@2x.png") } else { $("#passcond4").attr("src", "images/Xmark@2x.png") } } } function isAlphaNumNewOnlineIdSpecialChars(b) { var a = new RegExp("(?!^\\d+$)(?!^[@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]+$)^[a-zA-Z0-9@#\\*\\(\\)\\+={}/\\?~;,\\.\\-\\_]{1,32}$"); return /^[^\s]*$/.test(b) && a.test(b) } function isAlphaNumOnlineIdSpecialChars(a) { var b = /[ !$%^&"'`|<>:\[\]\\]/; if (!b.test(a)) { return true } else { return false } } function maskOnlineId(a) { return a.substring(0, 4) + "*****" } function setCookie(b, g, i, h, f) { var d = new Date(); d.setTime(d.getTime() + (i * 24 * 60 * 60 * 1000)); var c = (i !== 0) ? "expires=" + d + ";" : ""; var e = h ? "domain=.bankofamerica.com;" : ""; var a = f ? "" : "secure"; document.cookie = b + "=" + g + ";" + c + e + " path=/;" + a } function getCookie(b) { var e = b + "="; var a = document.cookie.split(";"); for (var d = 0; d < a.length; d++) { var f = a[d]; while (f.charAt(0) == " ") { f = f.substring(1, f.length) } if (f.indexOf(e) === 0) { return f.substring(e.length, f.length) } } return null } function deleteCookie(a) { setCookie(a, "", -1) } function setCookieObj(a, b) { cookieObj[a] = b } function getCookieString() { var b = ""; for (var a in cookieObj) { if (cookieObj.hasOwnProperty(a)) { b += a + "=" + cookieObj[a] + "; " } } return b === "" ? " " : b } function areCookiesEnabled() { return navigator.cookieEnabled } function cloneObj(a) { for (p in a) { this[p] = (typeof (a[p]) === "object") ? new cloneObj(a[p]) : a[p] } } function noScroll(a) { if (!globalObj.allowScrolling) { a.preventDefault(); a.stopPropagation(); a.stopImmediatePropagation() } } function setDimensions() { if (globalObj.isIphone) { if (window.orientation === 90 || window.orientation === -90 || window.orientation === 270) { globalObj.screenWidth = screen.height; globalObj.screenHeight = screen.width } else { globalObj.screenWidth = screen.width; globalObj.screenHeight = screen.height } } else { globalObj.screenWidth = $(window).width(); globalObj.screenHeight = $(window).height() } globalObj.pageHeight = $(document).height() } function resizePopups() { var a = 0; var b = 0.4; var c = 200; if (globalObj.isNative || globalObj.isWebView) { a = 125 } setDimensions(); $("#loading").css("top", $("#" + globalObj.pageID).position().top + 40 + "px"); if ($(".bottomPopupPanel").is(":visible")) { $("#loading").css("height", ($(document).height() - $("#bottomPopup").height() + a) + "px") } else { if ($("div.boaTouchSearchBar-wrapper input").length > 0) { $("#loading").css("top", $("div.boaTouchSearchBar-wrapper").position().top - a + 48 + "px") } else { $(".loadingBorder").css("display", "inherit"); $("#loading").css("height", ($(document).height() + a) + "px") } } if ($(".spinnerPanel").is(":visible")) { $(".spinnerPanel").css({ height: globalObj.pageHeight + "px" }); $(".spinner").animate({ top: $(window).scrollTop() + globalObj.screenHeight * b + "px" }, c) } if ($(".popupPanel").is(":visible")) { $(".popupPanel").css({ height: globalObj.pageHeight + "px" }); $(".popupBox").animate({ top: $(window).scrollTop() + (globalObj.screenHeight - $(".popupBox").css("height").replace(/[^-\d\.]/g, "")) * b + "px" }, c) } } function showLoading(b, c) { var a; if ($("body").find(".spinnerPanel").length === 0) { a = '<div class="spinnerPanel"><div class="spinner"><span class="messageIcon"></span><a id="spinnerLink" class="adaHidden" href="javascript:void(0)" role="dialog">processing</a></div></div>'; $("body").append(a) } else { $(".spinnerPanel").removeAttr("style"); $(".spinner").removeAttr("style") } resizePopups(); $(".spinnerPanel").show(); $(".spinner").show(); $("#spinnerLink").trigger("focus"); globalObj.allowScrolling = false } function hideLoading() { $("div.spinnerPanel").hide(); globalObj.allowScrolling = true } function showListLoading() { $(".load").addClass("loading") } function hideListLoading() { $(".load").removeClass("loading") } function queryParamsFor(a) { var e = [], d; var b = a.slice(a.indexOf("?") + 1).split("&"); for (var c = 0; c < b.length; c++) { d = b[c].split("="); e.push(d[0]); e[d[0]] = decodeURIComponent((d[1] + "").replace(/\+/g, "%20")) } return e } Date.prototype.javaDate = function () { function c(d) { return (d < 10 ? "0" : "") + d } function b(d) { return d < 100 ? d < 10 ? "00" + d : "0" + d : d } var a = this.getFullYear(); a += "-" + c(this.getMonth() + 1); a += "-" + c(this.getDate()); a += "T" + c(this.getHours()); a += ":" + c(this.getMinutes()); a += ":" + c(this.getSeconds()); a += "." + b(this.getMilliseconds()); a += this.getTimezoneOffset() > 0 ? "-" : "+"; a += c(this.getTimezoneOffset() / 60) + "00"; return a }; function convertToDefaultDate(f) { var e = ""; var h = 0; var d = 0; var g = 0; var c = ""; var b = ""; if (isDate(f)) { var a = new Date(f); h = a.getMonth(); h++; d = a.getDate(); g = a.getFullYear(); if (h <= 9) { c = "0" } if (d <= 9) { b = "0" } e = g + "-" + c + h + "-" + b + d } return e } function isValidAmount(b) { var a = false; if ($.isNumeric(b)) { a = true } return a } function scrubLinks(a) { if (globalObj.isNative && globalObj.isAndroid) { a = a.replace(/href="/g, 'href="external://|'); return a } else { a = a.replace(/href=/g, 'target="_blank" href='); return a } } function signOff() { disposeObjects(); eliminateAuthVariables(); slidemenuObj.setMenuItemsOff(); var a = globalObj.env + "/mgateway/v1/signOff"; var b = ""; globalObj.isUserAuthenticated = false; makeServiceCall(a, b, checkSignOffMessage) } function signOffAndRedirecToHash(b) { disposeObjects(); eliminateAuthVariables(); slidemenuObj.setMenuItemsOff(); globalObj.isUserAuthenticated = false; var a = globalObj.env + "/mgateway/v1/signOff"; makeServiceCall(a, "", function () { pageObj.touchEvent = true; window.location.href = globalObj.env + "/mwebPodCookie?url=" + window.location.origin + window.location.pathname + window.location.search + "#home?app=signonv2" + (globalObj.currentEnv !== "" ? "&pipeline=" + globalObj.currentEnv.substring(1, globalObj.currentEnv.length) : ""); return true }) } function disposeObjects() { applicationObj.barkerCount = ""; $(".popoverMenu").children("li.menuItem").each(function (a, b) { $(this).children("div").addClass("hidden") }) } function sendSignOff() { confirmbottomPopup("Are you sure you want to sign out?", "Yes", "No", 50, 125, processConfirmPopup) } function processConfirmPopup(a) { if (a) { signOff() } return a } function checkSignOffMessage(a) { globalObj.menuNav = ""; if (($(".bottomPopupPanel").length > 0 || $(".popupPanel").length > 0)) { $(".popupPanel,.bottomPopupPanel").hide(); hideLoading() } if (applicationObj.sendAppFeedbackInd) { window.location.href = "https://secure.opinionlab.com/ccc01/o.asp?id=wwxOVCML&referer= http%3A%2F%2Fmobile.bankofamerica.com%2Fmobileweb" } else { if (isBlackBerry()) { window.location.href = mobilewebconfig.appConfig.unloadPage } else { window.location.href = mobilewebconfig.appConfig.mobilewebPage } } } function checkWebTimeout() { var a = new Date().getTime() / 1000; if (a - this.startTime >= 600) { this.startTime = a; timedOut(); return true } else { return false } } function resetTimeout() { if (!checkWebTimeout()) { stopTimeout(); startTimeout() } } function stopTimeout() { clearTimeout(this.timeoutLogout) } function startTimeout() { this.startTime = new Date().getTime() / 1000; globalObj.timeOut = this.startTime * 1000; if (!globalObj.isNative && !globalObj.isWebView && globalObj.isUserAuthenticated) { this.timeoutLogout = setTimeout(function () { timedOut() }, 600000) } } function checkTimeout() { var a = new Date().getTime(); return a - globalObj.nativeTimeOut } function timedOut() { if (globalObj.isUserAuthenticated) { slidemenuObj.setMenuItemsOff(); if (globalObj.slideMenu) { hideSlideOverMenu() } signOff(); setTimeout(function () { popup("For your security, your banking session has timed out due to inactivity.", "OK", 150, 200, function () { return false }); window.scrollTo(0, 1) }, 2000) } } function nativeToWebviewTrigger() { document.location = "native://autotrigger.action/" } function updateBarkerCount(a) { if (typeof menuItemTally === "function") { menuItemTally(a) } if (isSet(a.ebillsBarker)) { return a.ebillsBarker } } function menuItemTally(b) { var a = b.ebillsBarker; $(".popoverMenu").children("li.menuItem").each(function (c, f) { var g = $(this).attr("class"); var e = g.split(" "); f = e[1]; var d = "0"; if (e[1] === "billpay" || e[1] === "billpay_on") { if (a !== undefined) { d = a } } if (d !== "0") { setTally(e[1], d) } }) } function setTally(b, a) { $("." + b).children("div").removeClass("hidden"); $("." + b).children("div").html(a); $("." + b + "_on").children("div").html(a) } function eliminateAuthVariables() { applicationObj = {}; setApplicationObj(); globalObj.accountList = []; globalObj.moduleParameters = []; globalObj.menuItem = []; globalObj.moduleParameters = []; globalObj.safePassDevices = []; globalObj.onlineId = ""; globalObj.chickenSwitches = [] } function setSlideOverMenuEvent(a) { if (typeof slidemenuObj === "object") { loadSlideMenu(a) } else { $("body").append('<div id="slidemenu_sidePanel" style="display: none"></div>'); var b = { name: "cmw_slidemenu", version: "v1", cssName: "slidemenu.css", htmlName: "slidemenu.html", jsName: "slidemenu.js", element: "#slidemenu_sidePanel", callback: function () { loadSlideMenu(this.params) }, params: a }; loadModule(b) } } function loadSlideMenu(a) { slidemenuObj.setSlideMenuButtonClickEvent(a) } function setPageTitle(a) { if (a !== undefined && a !== "") { document.title = a } else { document.title = "Bank of America Mobile" } } function getState() { stateArrayDesc = ["AL|Alabama", "AK|Alaska", "AZ|Arizona", "AR|Arkansas", "CA|California", "CO|Colorado", "CT|Connecticut", "DE|Delaware", "DC|District of Columbia", "FL|Florida", "GA|Georgia", "HI|Hawaii", "ID|Idaho", "IL|Illinois", "IN|Indiana", "IA|Iowa", "KS|Kansas", "KY|Kentucky", "LA|Louisiana", "ME|Maine", "MD|Maryland", "MA|Massachusetts", "MI|Michigan", "MN|Minnesota", "MS|Mississippi", "MO|Missouri", "MT|Montana", "NE|Nebraska", "NV|Nevada", "NH|New Hampshire", "NJ|New Jersey", "NM|New Mexico", "NY|New York", "NC|North Carolina", "ND|North Dakota", "OH|Ohio", "OK|Oklahoma", "OR|Oregon", "PA|Pennsylvania", "RI|Rhode Island", "SC|South Carolina", "SD|South Dakota", "TN|Tennessee", "TX|Texas", "UT|Utah", "VT|Vermont", "VA|Virginia", "WA|Washington", "WV|West Virginia", "WI|Wisconsin", "WY|Wyoming"]; return stateArrayDesc } function networkUnavailable() { popup("Your device is currently unable to establish a network connection. After there is a good connection, please try to sign in again.", "OK", 175, 200, function () { return false }) } function generateUUID() { var b = new Date().getTime(); var a = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) { var d = (b + Math.random() * 16) % 16 | 0; b = Math.floor(b / 16); return (e == "x" ? d : (d & 7 | 8)).toString(16) }); return a } function altListView(a) { if (a === "bgblue") { $("#altListView li:nth-child(odd)").addClass("bgblue_bac") } else { if (a === "bggray") { $("#altListView li:nth-child(odd)").addClass("bggray_bac") } else { $("#altListView li:nth-child(odd)").css("background-color", a) } } } (function (a) { a.fn.extend({ boaTouchSearchBar: function (b) { b = a.extend({ buttonText: "Close", defaultText: "Search...", onSearch: null, searchComplete: false, onButtonClick: null, hasSearchText: false }, b); return this.each(function () { var o; var n; var j; var f; if (b.searchComplete) { f = a(".boaTouchSearchBar-button-inner"); e(); return false } o = a(this); var c = a('<div class="boaTouchSearchBar-wrapper"><div class="boaTouchSearchBar-button boaTouchSearchBar-normal  boaTouchSearchBar-round-left"> <div class="boaTouchSearchBar-button-icon boaTouchSearchBar-button-inner"></div></div> <div class="boaTouchSearchBar-input"><span class="boaTouchSearchBar_resetContr hidden"><a href="#" id="boaTouchSearchBar_reset">&nbsp;</href></span></div><div class="btnContainer hidden"><a href="javascript:void(0);" role="button" class="btnsmall" id="actionBtn">' + b.buttonText + "</a></div></div>"); a(this).before(c); a(".boaTouchSearchBar-input", c).append(o); n = a(".boaTouchSearchBar-input input", c); j = a(".boaTouchSearchBar-button", c); f = a(".boaTouchSearchBar-button-inner", j); searchResetLink = a("#boaTouchSearchBar_reset", ".boaTouchSearchBar-input"); searchButtonLink = a("#actionBtn", ".boaTouchSearchBar-wrapper"); if (b.onButtonClick !== null) { searchButtonLink.bind("click", function (m) { searchResetLink.parent().hide(); searchButtonLink.parent().hide(); n.parent().css("width", "88%"); b.onButtonClick(); a("#loading").hide(); m.preventDefault() }) } var l = 0; var d = 0; var g = 0; var i = b.defaultText; l = n.width(); d = n.css("padding-left"); g = parseInt(l) + (parseInt(d) * 2); n.css({ width: 0, paddingLeft: 0, paddingRight: 0 }).css({ width: 0, paddingLeft: 0, paddingRight: 0 }); n.attr("placeholder", i).addClass("boaTouchSearchBar-water-mark"); n.addClass("boaTouchSearchBar-water-mark").css({ width: "100%", paddingLeft: d + "px", paddingRight: d + "px" }); n.on("focus", function () { searchButtonLink.parent().show(); n.parent().css("width", "68%") }); a(searchResetLink).bind("click", function (m) { n.attr("placeholder", i).addClass("boaTouchSearchBar-water-mark"); a("#loading").hide(); b.hasSearchText = false; searchButtonLink.parent().hide(); searchResetLink.parent().hide(); n.parent().css("width", "68%"); a(".boaTouchSearchBar-water-mark").trigger("focus"); a(".boaTouchSearchBar-water-mark").val(""); a(".boaTouchSearchBar-water-mark").trigger("click"); m.preventDefault() }); n.bind("keyup", function (m) { if (n.val().length > 0) { n.parent().css("width", "68%"); searchResetLink.parent().show(); b.hasSearchText = true } }); n.bind("keydown", function (m) { if (m.which === 13) { h() } }).on("click", function (m) { if (!b.hasSearchText) { n.removeClass("boaTouchSearchBar-water-mark").val("") } a("#loading").show(); a("#loading").css("top", a("#page").position().top + 40 + "px"); a(".messaging").hide(); m.preventDefault() }).on("blur", function () { a("#loading").hide(); if (a(this).val() === "") { n.attr("placeholder", i).addClass("boaTouchSearchBar-water-mark") } }); function h() { if (n.val() !== "" && n.val() !== i) { k(); if (b.onSearch != null) { b.onSearch(n.val()) } } } function k() { a("#loading").bind("click", function (m) { a("#loading").hide(); a(".loadingBorder").css("display", "inherit"); a("#loading").unbind("click") }); resizePopups(); a("#loading").show(); a(".loadingBorder").hide(); a("#loading").css("top", a(n).offset().top + 36 + "px") } function e() { a("#loading").hide() } }) } }) })(jQuery); function filterResponse(a) { var b = a; return a } var blackListCharsMapping = { "&": "&amp;", "/": "&#x2F", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }; function escapeHtmlChars(a, b) { return a.replace(b ? /[/&<>'"]/g : /[/&<>]/g, function (d) { return blackListCharsMapping[d] }) } var iPadheader = { toolbarDefault: function () { var a = '<div id="iPadtoolBar" class="iPadtoolBar"><a id="leftButton"></a><h1 id="title" class="logo" title="Bank of America Logo"><span id="titleText"></span></h1><a id="rightButton"></a></div>'; return a }, leftButton: function (b, c, a) { if (!b) { $("#leftButton").hide() } else { $("#leftButton").attr("href", a); $("#leftButton").addClass("iPadleftButton"); $("#leftButton").html('<span class="buttonText">' + c + "</span>") } }, pageTitle: function (a) { if (isSet(a) && a === "") { $("#buttonText").hide(); $("#title").addClass("logo"); $("#title").attr("title", "Bank of America Logo") } else { $("#title").removeAttr("title", "Bank of America Logo"); $("#title").removeClass("logo"); $("#titleText").html(a) } $("#title").attr("aria-live", "rude").trigger("focus") }, rightButton: function (b, c, a) { if (!b) { $("#rightButton").addClass("noRightButton"); $("#rightButton").hide() } else { $("#rightButton").attr("href", a); $("#rightButton").addClass("iPadrightButton"); $("#rightButton").html('<span class="buttonText">' + c + "</span>") } header.maxWidth() }, meter: function (d, c) { $("#iPadtoolBar").addClass("meter"); $("h1").addClass("meter"); $("#titleText").addClass("meter"); $("h1").append('<span id="segmentContainerid" class="segmentContainer"></span>'); for (var b = 0; b < d; b++) { $("#segmentContainerid").prepend('<span id="segmentComplete' + b + '"class="segment white"></span><span id="circleComplete' + b + '"class="circle white"></span><span class="segmentBreak"></span>') } for (var a = 0; a < c; a++) { $("#segmentContainerid").append('<span id="segment' + a + '"class="segment"></span><span id="circle' + a + '"class="circle"></span><span class="segmentBreak"></span>') } } }; var DeviceName = { win8: "WINDOWS8", android: "ANDROID", mac: "MAC" }; function detectDeviceInfo() { var a = navigator.userAgent.toLowerCase(); if (a.match(/msapphost/) || a.match(/msie/)) { return DeviceName.win8 } else { return a } } function closeMessage() { $(".closeIcon").on("click", function () { $(this).closest("div.messaging").hide() }) } function makeScroller(b) { var a; document.addEventListener("touchmove", function (c) { c.preventDefault() }, false); setTimeout(function () { a = new iScroll(b, { bounce: true, hScrollbar: false }) }, 100) } function generateCLRequestID() { return Math.floor(Math.random() * 10000001) } function showCoachMark(b) { var a = $('<div id="coachMarkWrapper" class="coachMarkWrapper"><a href="javascript:void(0);" role="button" class="btnmini">Tap anywhere to close</a></div>'); popup(b, "", 70, 240, null); $(".popupBox").css("background-color", "#fff"); $(".popupBox").find(".popupLabel").css({ color: "#a1a1a1", "font-weight": "normal" }); $(".popupBox").find("a.popupButton").hide(); setTimeout(function () { $("body").append(a); $("body").bind("click", function (c) { $("#popup").remove(); $("#coachMarkWrapper").remove(); c.preventDefault() }) }, 500) } function detectSwipeOn(a, b) { var e = 0; var d = false; var c = { threshold: { x: 20, y: 20 }, preventDefaultEvents: true }; if (!a) { return false } return $(a).each(function () { var h = { x: 0, y: 0 }; var f = { x: 0, y: 0 }; function g(l) { h = { x: 0, y: 0 }; f = { x: 0, y: 0 }; d = false; h.x = l.targetTouches[0].pageX; h.y = l.targetTouches[0].pageY } function k(l) { d = true; if (c.preventDefaultEvents) { l.preventDefault() } f.x = l.targetTouches[0].pageX; f.y = l.targetTouches[0].pageY } function i(l) { var m = h.y - f.y; if (m < c.threshold.y && m > (c.threshold.y * -1)) { e = h.x - f.x; if (e > c.threshold.x) { b("swipeLeft") } if (e < (c.threshold.x * -1)) { b("swipeRight") } } if (d === false) { b("noSwipe") } } function j(l) { console.log("Canceling swipe gesture...") } if (globalObj.isMsie) { this.attachEvent("touchstart", g); this.attachEvent("touchmove", k); this.attachEvent("touchend", i); this.attachEvent("touchcancel", j) } else { this.addEventListener("touchstart", g, false); this.addEventListener("touchmove", k, false); this.addEventListener("touchend", i, false); this.addEventListener("touchcancel", j, false) } }) } function showToggleSlider(a) { if (!$(".dealsHide").is(":visible")) { $(a + " .dealsHide").css("display", "table-cell"); $(a + " .dealsAction").css("display", "none") } else { hideToggleSlider() } } function hideToggleSlider() { $(".dealsHide").css("display", "none"); $(".dealsAction").css("display", "table-cell") } function encrypt(b, a, e, d) { var c = CryptoJS.MD5(CryptoJS.enc.Utf8.parse(a)); return CryptoJS.AES.encrypt(b, c, { mode: (e || CryptoJS.mode.ECB), padding: (d || CryptoJS.pad.Pkcs7) }).toString() } function triggerBusinessEvent(a, b, d, e, c) { defaultBE = { serviceProvider: applicationObj.serviceProvider, serviceCategory: applicationObj.serviceCategory, channelType: applicationObj.channelID, eventDescription: "", statusCode: "100", reasonCode: "Normal", option: [] }; if (isSet(c) && c !== "") { MDA.logBusinessEvent($.combine(defaultBE, { eventCode: a, eventDescription: b, statusCode: d, reasonCode: e, option: [{ key: "PG", value: c }] })) } else { MDA.logBusinessEvent($.combine(defaultBE, { eventCode: a, eventDescription: b, statusCode: d, reasonCode: e })) } } function detectPinchZoom(d) { var g; var f; var e; var c; var b = 1; function a(h) { if (h < 0) { return (h * -1) } else { return h } } this.addEventListener("touchstart", function (h) { console.log("touchStart"); if (h.touches.length == 2) { g = a(parseInt(h.touches[0].pageX) - parseInt(h.touches[1].pageX)); f = a(parseInt(h.touches[0].pageY) - parseInt(h.touches[1].pageY)); c = parseInt(g) + parseInt(f) } }); this.addEventListener("touchmove", function (h) { if (h.touches.length == 2) { g = a(parseInt(h.touches[0].pageX) - parseInt(h.touches[1].pageX)); f = a(parseInt(h.touches[0].pageY) - parseInt(h.touches[1].pageY)); e = parseInt(g) + parseInt(f); if (c > e) { if (parseInt(b) > "1") { b = parseInt(b) - 1; $(d).css({ zoom: "1." + b }) } } else { if (c < e) { if (parseInt(b) < "9") { b = parseInt(b) + 1; $(d).css({ zoom: "1." + b }) } } } } c = parseInt(e) }) } function getHolidayList() { if (globalObj.holidayList !== null) { return } var a = $.getJSON(globalObj.env + "/mgateway/transfers-ws/rest/v1/holiday-lists.json"); a.complete(function (c) { if (c.responseText.indexOf("<") !== -1) { console.log("Holiday list error: No Session"); return } var b = JSON.parse(c.responseText); if (b.errorInfo) { console.log("Holiday list error: Server Error") } else { globalObj.holidayList = b } }) } function sasiBusEvent(b) { b = globalObj.env + "/mgateway/" + b; var a = ""; var c = b; var e = ""; var d = new cloneObj(serviceObj); d.requestType = "GET"; d.contentType = "text/json"; d.dataType = "json"; makeServiceCall(c, a, e, d) } function queryString(c, a) { var e = c.substring(1); var d = e.split("&"); for (var b = 0; b < d.length; b++) { var f = d[b].split("="); if (f[0] == a) { return f[1] } } } function getParameterByName(b, a) { a = a.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var d = new RegExp("[\\?&]" + a + "=([^&#]*)"), c = d.exec(b); return c === null ? "" : decodeURIComponent(c[1].replace(/\+/g, " ")) } function refreshAccounts() { if (typeof applicationObj.clearClip != "undefined" && applicationObj.clearClip == "true") { endPoint = globalObj.env + "/mgateway/myaccounts-ws/rest/v5/accountsoverview.filter?clearClip=true" } else { endPoint = globalObj.env + "/mgateway/myaccounts-ws/rest/v5/accountsoverview.filter" } var a = ""; makeServiceCall(endPoint, a, function (b) { globalObj.accountList = b.payload.accounts; applicationObj.signOnResponse.payload = b.payload; if (typeof b.payload === "object" && typeof b.payload.messages !== "undefined") { $("#page").data({ messages: b.payload.messages }) } else { $("#page").data({ messages: "" }) } }) } $(function () { window.countchange = 0; window.searchValue = ""; function a() { window.searchValue = $("#searchtextbox").val(); endPoint = globalObj.env + "/mgateway/myaccounts-ws/search/v1/autocomplete?term=" + window.searchValue + "&lang=en"; var b = ""; var c = new cloneObj(serviceObj); c.requestType = "GET"; c.contentType = "text/json"; c.dataType = "json"; makeServiceCall(endPoint, b, function (d) { message = d; if (message != null || message != "") { $(".searchlist").empty(); $.each(message, function (e, f) { if (e < 5) { $(".searchlist").append("<li>" + f.q + "</li>") } }); $(".searchpopup").show() } else { $(".searchpopup").hide() } if ($(".searchlist").find("li").length > 0) { $(".searchpopup").show() } else { $(".searchpopup").hide() } }, c) } $("#searchtextbox").live("focusin", function () { a() }); $(document).live("click", function (c) { var b = $(c.target); if (!(b.is($(".searchlist")) || b.is($("#searchtextbox")))) { $(".searchpopup").hide() } }); $(".msearch").live("click", function () { window.searchValue = $("#searchtextbox").val(); pageObj.nextPage = "#search"; window.location.hash = pageObj.nextPage }); $(".searchlist li").live("click", function () { window.searchValue = $(this).html(); $("#searchtextbox").val(window.searchValue); $(".searchpopup").hide(); setTimeout(function () { $(".searchpopup").hide() }, 1000) }); $("#searchtextbox").live("change keyup paste", function () { a() }); $(".seedesc").live("click", function () { var b = $(this).closest(".ritemdesc").find(".full_anwser").html(); popup(b, "Ok", 300, 300) }) }); function setClipParameters(a) { if (a.indexOf("clipIdentifier") > 0) { applicationObj.favAccountInfo.clipIdentifier = getParameterByName(a, "clipIdentifier") } if (a.indexOf("clipOfferId") > 0) { applicationObj.favAccountInfo.clipOfferId = getParameterByName(a, "clipOfferId") } if (a.indexOf("lastFraud") > 0) { applicationObj.favAccountInfo.lastFraud = getParameterByName(a, "lastFraud") } } function initiateAuthStepUpCall(f) { var e = globalObj.chickenSwitches; var a = "true"; if (isSet(e) && e.length > 0) { jQuery.each(e, function (g, h) { featureKey = $(h).attr("featureKey"); if (featureKey === "featureSwitch_otacEnable") { a = $(h).attr("isEnabled") } }) } if (a === "true" || a === "TRUE") { $("#otacSwitch").removeClass("hidden"); $(".buttonForError").removeClass("hidden"); $("#otacError").removeClass("hidden"); $("#SendAuthorizationcode").addClass("hidden") } else { $("#SendAuthorizationcode").removeClass("hidden"); $("#otacSwitch").addClass("hidden"); $(".buttonForError").addClass("hidden"); $("#otacError").addClass("hidden") } if (a === "true") { var b = globalObj.env + "/mgateway/authws/rest/sas/sm/v2/initiateStepUp"; var c = '{"processRules":[{"name":"AuthenticationContext","value":"CHANGECARDPIN"}]}' } else { var b = globalObj.env + "/mgateway/authws/common/sm/stepup/initiateAuthStepUp"; var c = '{"InitiateAuthenticationStepUpRequest":{"customerIdentifier":{"guid":"' + f.guid + '"}, "authenticationLevel":{"code":"targetAuthLevel","value":"400"},"processRules":[{"name":"AuthenticationContext","value":"targetResourceId/uri"}]}}' } var d = { requestType: "POST", contentType: "application/json; charset=utf-8", dataType: "json" }; message = makeServiceCall(b, c, initiateAuthStepUpCallBack, d); return message } function initiateAuthStepUpCallBack(e) { console.log(e); if (!e || e === false) { showMessage("Service Not available", "divMessaging", "error"); window.scrollTo(0, 1) } else { var a = e.InitiateAuthenticationStepUpResponse; var h = globalObj.chickenSwitches; var b = "true"; if (isSet(h) && h.length > 0) { jQuery.each(h, function (i, j) { featureKey = $(j).attr("featureKey"); if (featureKey === "featureSwitch_otacEnable") { b = $(j).attr("isEnabled") } }) } if (b === "true" || b === "TRUE") { $("#otacSwitch").removeClass("hidden"); $(".buttonForError").removeClass("hidden"); $("#otacError").removeClass("hidden"); $("#SendAuthorizationcode").addClass("hidden") } else { $("#SendAuthorizationcode").removeClass("hidden"); $("#otacSwitch").addClass("hidden"); $(".buttonForError").addClass("hidden"); $("#otacError").addClass("hidden") } if (b === "true") { if (typeof e.errorInfo != "undefined") { var c = e.errorInfo; var g = c[0].code; var f = c[0].description; hideLoading(); pageObj.touchEvent = true; switch (g) { case "ERROR_NO_CONTACTS": applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.otpFlowInfo.errorNoContacts = true; applicationObj.otpFlowInfo.errorOtpLocked = false; applicationObj.errorText = f; pageObj.nextPage = "#errorMessage?app=otp"; window.location.hash = pageObj.nextPage; break; case "ERROR_OTP_LOCKED": applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.otpFlowInfo.errorOtpLocked = true; applicationObj.errorText = f; pageObj.nextPage = "#errorMessage?app=otp"; window.location.hash = pageObj.nextPage; break; default: showMessage(f, "divMessaging", "error"); window.scrollTo(0, 1); break } } else { if (typeof e.stepUpToken !== "undefined") { var d = e.stepUpToken.stepUpType; switch (d) { case "OTP": pageObj.touchEvent = true; window.location.hash = "#home?app=otp"; applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.contactDetails = e.stepUpSecuredContactPoints; break; case "OTP_VERIFY_CVV": pageObj.touchEvent = true; window.location.hash = "#home?app=otp"; applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.contactDetails = e.stepUpSecuredContactPoints; applicationObj.contactDetailsV2 = e.cardIdentifierList; break; case "OTP_VERIFY_PIN": pageObj.touchEvent = true; window.location.hash = "#home?app=otp"; applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.contactDetails = e.stepUpSecuredContactPoints; applicationObj.contactDetailsV2 = e.cardIdentifierList; break; case "NONE": pageObj.touchEvent = true; window.location.hash = applicationObj.stepupFlowJSON.redirectionUrl; break; default: window.scrollTo(0, 1); break } } } } else { if (typeof a.errorInfo != "undefined") { var c = a.errorInfo; var g = c[0].code; var f = c[0].description; hideLoading(); pageObj.touchEvent = true; switch (g) { case "ERROR_NO_CONTACTS": applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.otpFlowInfo.errorNoContacts = true; applicationObj.otpFlowInfo.errorOtpLocked = false; applicationObj.errorText = f; pageObj.nextPage = "#errorMessage?app=otp"; window.location.hash = pageObj.nextPage; break; case "ERROR_OTP_LOCKED": applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.otpFlowInfo.errorOtpLocked = true; applicationObj.errorText = f; pageObj.nextPage = "#errorMessage?app=otp"; window.location.hash = pageObj.nextPage; break; default: showMessage(f, "divMessaging", "error"); window.scrollTo(0, 1); break } } else { if (typeof a.stepUpToken !== "undefined") { var d = a.stepUpToken.stepUpType; switch (d) { case "OTP": applicationObj.contactDetails = a.stepUpToken.processContext.contactDetails; applicationObj.otpFlowInfo = applicationObj.stepupFlowJSON; applicationObj.otpFlowInfo.isStepUpAuth = true; applicationObj.otpFlowInfo.otpFlowV2 = true; applicationObj.otpFlowInfo.errorOtpLocked = false; pageObj.touchEvent = true; window.location.hash = "#home?app=otp"; break; case "NONE": pageObj.touchEvent = true; window.location.hash = applicationObj.stepupFlowJSON.redirectionUrl; break; default: window.scrollTo(0, 1); break } } } } delete applicationObj.stepupFlowJSON } } function ondemanPINcheckCustomerEligibility(a) { var b = globalObj.env + "/mgateway/authws/common/sm/cardmnt/incoming/verifyChangePinEligibility"; var c = JSON.stringify({ VerifyChangePinEligibilityRequest: a }); makeServiceCall(b, c, callbackondemanPINCheckCustomerEligibility) } function callbackondemanPINCheckCustomerEligibility(d, c) { createAppVars(); if (!d || d === false) { showMessage("Service not available.  Try again later.", "divMessaging", "error"); hideLoading(); window.scrollTo(0, 1) } else { var f = d.VerifyChangePinEligibilityResponse; var b = ""; applicationObj.ondemandpin.pinChangeEligile = f.pinChangeEligile; if (typeof f != "undefined" && typeof f.errorInfo != "undefined" && f.pinChangeEligile === false) { hideLoading(); var e = f.errorInfo[0].code; if (f.cardType === "smallbusiness") { switch (e) { case "ERROR_FRAUD_LOCK": case "NOT_ELIGIBLE": case "ERROR_INVALID_INPUT": case "CC_SB_PIN_CHANGE_FRAUD_LOCK": applicationObj.ondemandpin.notEligbileResponse = f; pageObj.nextPage = "#sbNotEligible?app=ondemandpin"; window.location.hash = pageObj.nextPage; break; default: showMessage(errorDescription, "divMessaging", "error"); break } } else { switch (e) { case "ERROR_FRAUD_LOCK": case "NOT_ELIGIBLE": case "ERROR_INVALID_INPUT": applicationObj.ondemandpin.notEligbileResponse = f; pageObj.nextPage = "#notEligible?app=ondemandpin"; window.location.hash = pageObj.nextPage; break; default: showMessage(errorDescription, "divMessaging", "error"); break } } } else { if (typeof f != "undefined" && f.pinChangeEligile === true) { if (f.cardType === "smallbusiness") { applicationObj.ondemandpin.accountNumber = f.accountNumber; var a = {}; applicationObj.stepupFlowJSON = { originatingFlow: "Change Card PIN", redirectOnError: false, backButtonredirectionUrl: "#cardsettings?app=card/settings", redirectionUrl: "#sbChangePINForm?app=ondemandpin", errorRedirectionUrl: "", cancelRedirectionUrl: "#cardsettings?app=card/settings", accountLockedForSafe: false }; a.guid = applicationObj.ondemandpin.accountIdentifier; initiateAuthStepUpCall(a) } else { applicationObj.ondemandpin.accountNumber = $.trim(f.accountNumber); var a = {}; applicationObj.stepupFlowJSON = { originatingFlow: "Change Card PIN", redirectOnError: false, backButtonredirectionUrl: "#cardsettings?app=card/settings", redirectionUrl: "#changePINForm?app=ondemandpin", errorRedirectionUrl: "", cancelRedirectionUrl: "#cardsettings?app=card/settings", accountLockedForSafe: false }; a.guid = applicationObj.ondemandpin.accountIdentifier; initiateAuthStepUpCall(a) } } } } } function ssccSliderMenuShowHideLinks(b) { var c = "", d = "", a = [], g = 0; if (!isSet(globalObj.accountList) || globalObj.accountList.length === 0 || globalObj.accountList === "null") { return false } else { $.each(globalObj.accountList, function (h, i) { c = $(i).attr("identifier"); d = $(c).attr("category"); a.push(d) }); $.each(a, function (h, i) { if (i.toUpperCase() == "CARD") { g++ } }); var f = false; var e = applicationObj.signOnResponse.payload.customer; if (typeof e.segments != "undefined") { $.each(e.segments, function (h, i) { if (i.name == "SmallBusinessCust") { if (i.value == "Y" || i.value == "y") { f = true } } }) } if (g == 1 && (a.length == g)) { $(".slidemenu_menu .menuItem.accounts").hide(); $(".slidemenu_menu .menuItem.mycard").show(); $(".slidemenu_menu .menuItem.transfers").hide(); $(".slidemenu_menu .menuItem.rewards").show(); $("#transfersBtn").hide(); $("#billPayBtn").hide(); if (f) { $(".slidemenu_menu .menuItem.mysbcard").show(); $(".slidemenu_menu .menuItem.mycard").hide() } } else { if (g > 1 && (a.length == g) && (b && b.length == 0)) { $(".slidemenu_menu .menuItem.accounts").hide(); $(".slidemenu_menu .menuItem.mycards").show(); $(".slidemenu_menu .menuItem.transfers").hide(); $(".slidemenu_menu .menuItem.rewards").show(); if (f) { $(".slidemenu_menu .menuItem.mysbcards").show(); $(".slidemenu_menu .menuItem.mycards").hide() } } else { if (g > 1 && (b && b.length > 0) && (b && g + b.length == a.length)) { $(".slidemenu_menu .menuItem.transfers").hide(); $(".slidemenu_menu .menuItem.rewards").show() } else { $(".slidemenu_menu .menuItem.mycards").hide(); $(".slidemenu_menu .menuItem.mycard").hide(); $(".slidemenu_menu .menuItem.mysbcard").hide(); $(".slidemenu_menu .menuItem.mysbcards").hide() } } } } } function toTransfersLanding(a) { if (typeof a !== "undefined" && a) { window.location.hash = "#home?app=transfers"; return false } };