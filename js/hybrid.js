function showError(e) { var d = $(".messageIcon"); var b = $("#divMessaging"); var a = ""; if (pageObj.pageModel.isHybrid) { if (parseBool(pageObj.pageModel.handset)) { a = "messaging" } else { a = "messagingIpadError" } } else { a = "messaging" } if (!pageObj.pageModel.handset) { if (b.children("span")) { b.children("span").remove() } } else { if (d.hasClass("posak")) { d.removeClass("posak") } if (!d.hasClass("error")) { d.addClass("error") } } if (b.length != 0) { if (b.hasClass("hidden")) { b.removeClass("hidden") } if (!b.hasClass(a)) { b.addClass(a) } } else { $("." + a + "").show() } var c = '<a id="adaMessage" href="#" style="text-decoration:none">' + e + "</a>"; $("." + a + " h2").html(c); window.scrollTo(0, 1); setTimeout(function () { $("#adaMessage").trigger("focus") }, 1000) } function showSuccessMessage(c) { var b = $(".messageIcon"); var a = $("#divMessaging"); if (b.hasClass("error")) { b.removeClass("error") } if (!b.hasClass("posak")) { b.addClass("posak") } if (a.length != 0) { if (a.hasClass("hidden")) { a.removeClass("hidden") } if (!a.hasClass("messaging")) { a.addClass("messaging") } } else { $(".messaging").show() } $(".messaging h2").html(c); window.scrollTo(0, 1) } function showInfoMessage(a) { showMessage(a, "divMessaging", "closeIcon") } function leftButtonSelected() { execute("previous") } function getActiveElement() { return document.activeElement.id } function setFocusOnElement(a) { $("#" + a).unbind(); $("#" + a).trigger("focus"); inputFocus("#" + a, "voiceoverrunning") } function isSet(a) { return a !== null && typeof a !== "undefined" } function maskEmail(a) { return a[0] + "*******" + a.substr(a.indexOf("@")) } function acceptNumeric(a) { return (String.fromCharCode(a.which).match(/[0-9]/) !== null) && $(a.target).val().length < ($(a.target).attr("maxlength") || Number.POSITIVE_INFINITY) } function isAlphaNumEmail(a) { var c = String.fromCharCode(a); var b = /[a-zA-Z0-9@]+$/; if ((a == null) || (a == 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) { return true } if (b.test(c)) { return true } else { return false } } function isValidOnlineIdSpecialChars(a) { var c = String.fromCharCode(a); var b = /[ !$%^&"'`|<>:\[\]\\]+$/; if ((a == null) || (a == 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) { return true } if (!b.test(c)) { return true } else { return false } } function isAlphaNumWithSpacesStr(a) { var b = /^[a-zA-Z0-9 ]+$/; if (b.test(a)) { return true } else { return false } } function isEmail(a) { var b = new RegExp("\\b(^((^[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@(([a-zA-Z]|([a-zA-Z][0-9a-zA-Z]+))[-\\w]*\\.)+[a-zA-Z]{2,9}$)).*$)\\b"); if (b.test(a)) { return true } else { return false } } function isOnlineID(a) { var b = /\D/; if (b.test(a)) { return true } else { return false } } function isValidPasscodeSpecialStr(a) { var b = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9~@#*()\{\}|;?\/,._=\-+]+)$/; if (b.test(a)) { return true } else { return false } } function isNumber(a) { var b = String.fromCharCode(a); if ((a == null) || (a == 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) { return true } else { if (("0123456789").indexOf(b) > -1) { return true } else { return false } } } function isAlpha(a) { var c = String.fromCharCode(a); var b = /^[a-zA-Z]+$/; if ((a == null) || (a == 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) { return true } if (b.test(c)) { return true } else { return false } } function isAlphaNumStr(a) { var b = /^[a-zA-Z0-9]+$/; if (b.test(a)) { return true } else { return false } } function isPasscode(a) { var b = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/; if (b.test(a)) { return true } else { return false } } function preventDefault(a) { a.preventDefault() } function pad2(a) { return (a < 10 ? "0" : "") + a } function makeExpirationDate(c) { var g = new Date(); var f = g.getMonth() + 1; var e = g.getFullYear(); var b = '<option value="">Expiration Date</option>'; for (var a = 1; a <= c * 12; a++) { b += '<option value="' + pad2(f) + e + '">Expiration Date ' + pad2(f) + "/" + e + "</option>"; f++; if (f > 12) { f = 1; e++ } } return b } function maskPhone(a) { return "***-***-" + a.substr(a.length - 4) } function isZIP(a) { var b = /^\d{5}$|^\d{5}-\d{4}$/; if (b.test(a)) { return true } else { return false } } function toggleButton(a) { if (a == "off") { $(".btn").addClass("disabled"); $("ul.btnGroupPin > li:last-child > a").removeClass("btnPos").addClass("btnDis").attr("title", "dimmed") } else { $(".btn").removeClass("disabled"); $("ul.btnGroupPin > li:last-child > a").removeClass("btnDis").addClass("btnPos").attr("title", "") } } function isInteger(b) { var a; for (a = 0; a < b.length; a++) { var d = b.charAt(a); if (((d < "0") || (d > "9"))) { return false } } return true } function daysInFebruary(a) { return (((a % 4 == 0) && ((!(a % 100 == 0)) || (a % 400 == 0))) ? 29 : 28) } function DaysArray(b) { for (var a = 1; a <= b; a++) { this[a] = 31; if (a == 4 || a == 6 || a == 9 || a == 11) { this[a] = 30 } if (a == 2) { this[a] = 29 } } return this } $.fn.scrollView = function () { $(".overthrow").scrollTop; return this.each(function () { $(".overthrow").animate({ scrollTop: ($(this).offset().top) - ($(".toolBar").height()) }, 1000) }) }; function enrolldartCallFireOnClick(d, b, a, c) { } function showFooter(e) { var f = e.footerMessage; var d = e.userAuthenticated; var h = e.EqualHousingLenderURL; var a = ""; var b = ""; var c = ""; var g = []; if (!($("body").has("footer")).length > 0) { if (!jQuery.isXMLDoc(f)) { f = ($.parseXML(f)) } if ($(f).find("contentMessage").text() != "") { c = $($.parseXML($(f).find("contentMessage").text())).find("Privacy") } else { c = $(f).find("Privacy") } if (isSet(c)) { b = $(c).find("Description").text(); b = b.substring(3).substring(0, b.length - 7) } a = '<footer><!--Begin footer div--><div class="footnote"></div><div class="footer"><!--secure--><div class="left secureArea"><span>Secure Area</span></div><div class="center"><a href="javascript:execute(\'privacyLink\',\'https://www.bankofamerica.com/privacy/overview.go\')"  target="_new">Privacy &amp; Security</a></div><div class="right"><a href="javascript:execute(\'equalHousingLink\', \'' + h + '\')"  class="ehl" target="_new">Equal Housing Lender</a></div><p class="clear">' + b + "</p></div><!--//End footer div--></footer>"; $("body").append(a) } } function maskCard(c) { var a = ""; for (var b = 0; b < c.length - 4; b++) { a += "*" } return a + c.substring(c.length - 4) } function maskPin(c) { var a = ""; for (var b = 0; b < c.length - 4; b++) { a += "*" } return a + c.substring(c.length - 4) } function maskData(c) { var a = ""; for (var b = 0; b < c.length; b++) { a += "*" } return a } function calculateTimeAMPM(a) { var b = "a.m."; if (a.length > 3) { minValue = a.substring(2, 4); if (a.substring(0, 2) == 12) { b = "p.m." } if (a.substring(0, 2) > 12) { timeValue = a.substring(0, 2) - 12; b = "p.m." } else { timeValue = a.substring(0, 2) } } else { timeValue = a.substring(0, 1); minValue = a.substring(1, 3) } if (timeValue.toString().length < 2) { timeValue = "0" + timeValue } return timeValue + ":" + minValue + " " + b } function setDateFormat(c) { var h = ""; var f = ""; var g = ""; var b = ""; var a = c.split("-"); for (var d = 0; d < a.length; d++) { var e = a[d]; if (d == 0) { f = e.substring(2, 4) } if (d == 1) { g = e + "/" } if (d == 2) { b = e + "/" } } h = g + b + f; return h } function loadDatePicker(b, a) { if (typeof $.fn.bacTouchDatePicker === "function") { return $(b).bacTouchDatePicker(a).bacTouchDatePicker(true) } else { $.ajax({ url: "js/baccalendar.js", dataType: "script", cache: true, complete: function () { return $(b).bacTouchDatePicker(a).bacTouchDatePicker(true) } }) } } function formatUSCurrencyCommon(a) { if (typeof a == "undefined") { return "" } a = a.toString().replace(/\$|\,/g, ""); if (isNaN(a)) { a = "0" } numInt = Math.floor(a * 100 + 0.5); sign = (numInt == (numInt = Math.abs(numInt))); dollars = Math.floor(numInt / 100).toString(); for (var b = 0; b < Math.floor((dollars.length - (1 + b)) / 3); b++) { dollars = dollars.substring(0, dollars.length - (4 * b + 3)) + "," + dollars.substring(dollars.length - (4 * b + 3)) } cents = numInt % 100; if (cents < 10) { cents = "0" + cents } return (((sign) ? "" : "-") + "$" + dollars + "." + cents) } function showFooterAndError(a) { if (a !== undefined) { if (parseBool(a.handset) === false) { $("#btnPin").hide() } if (a.failureMessage != undefined && a.failureMessage != "") { showMessage(a.failureMessage, "divMessaging", "error") } showFooter(a) } return true } function showMessage(l, b, j, k, h) { var e; if ((typeof h === "undefined" || h === "") && typeof executeAda === "function") { executeAda() } var f = { error: "Error icon", info: "Information icon", posak: "Success icon", warning: "Warning icon", help: "Help icon" }; if (!isSet(b)) { b = "divMessaging" } if ($("#" + b).attr("class") === "hidden") { $("#" + b).removeClass("hidden").addClass("messaging") } else { $("#" + b).addClass("messaging") } $("#" + b).removeAttr("style"); if (typeof l === "string" && typeof j === "string") { if (j === "info" || j === "error" || j === "system_error" || j === "posak" || j === "warning" || j === "help") { switch (j) { case "error": e = "TLu_ERROR"; break; case "system_error": j = "error"; e = "TLs_ERROR"; break; case "posak": e = "TL_Success"; break; case "warning": e = "TL_Info"; break; case "help": e = "TL_Info"; break; case "info": e = "TL_Info"; break; default: e = ""; break }if (isSet(k)) { if (h === "voiceoverrunning") { $("#" + b).html('<a id="adaMessage" class="adaHiddenText" role="text"></a><span class="messageIcon ' + j + '"></span><div class="messageText"><a class="closeIcon" title="Close message" role="button"></a><h2 aria-hidden="true" role="text" class="' + e + '">' + k.replace(/[<]br[^>]*>/, "") + '</h2><p aria-hidden="true" role="text" class="' + e + '">' + l + "</p></div>") } else { $("#" + b).html('<a id="adaMessage" class="adaHiddenText" href="javascript:void(0)" role="text"></a><span class="messageIcon ' + j + '"></span><div class="messageText"><a href="#" class="closeIcon" title="Close message" role="button"></a><h2 aria-hidden="true" role="text" class="' + e + '">' + k.replace(/[<]br[^>]*>/, "") + '</h2><p aria-hidden="true" role="text" class="' + e + '">' + l + "</p></div>") } } else { if (h === "voiceoverrunning") { $("#" + b).html('<a id="adaMessage" class="adaHiddenText" role="text"></a><span class="messageIcon ' + j + '"></span><div class="messageText"><a class="closeIcon" title="Close message" role="button"></a><p aria-hidden="true" role="text" class="' + e + '">' + l + "</p></div>") } else { $("#" + b).html('<a id="adaMessage" class="adaHiddenText" href="javascript:void(0)" role="text"></a><span class="messageIcon ' + j + '"></span><div class="messageText"><a href="#" class="closeIcon" title="Close message" role="button"></a><p aria-hidden="true" role="text" class="' + e + '">' + l + "</p></div>") } k = "" } $(".closeIcon").on("click", function (i) { hideMessage(b); i.preventDefault() }) } else { $("#" + b).html('<span class="messageIcon"></span><div class="messageText"><h2 class="TL_INFO">' + l + "</h2></div>") } var c = l.replace(/[<]br[^>]*>/, ","); var g; if (c.indexOf("<") == -1) { g = c } else { g = $("<div>" + c + "</div>").text() } $("#adaMessage").html(f[j] + (!!k ? ", " + k : "") + ", " + g) } else { if (Object.prototype.toString.call(l) === "[object Array]" && Object.prototype.toString.call(j) === "[object Array]") { var c = ""; var g = ""; var a = ""; if (h === "voiceoverrunning") { a = '<a id="adaMessage" class="adaHidden" role="text"></a>' } else { a = '<a id="adaMessage" class="adaHidden" href="javascript:void(0)" role="text"></a>' } for (var d = 0; d < l.length; d++) { a += '<span class="messageIcon ' + j[d] + '"></span><div class="messageText">'; if (d === 0) { if (h === "voiceoverrunning") { a += '<a class="closeIcon" title="Close message" role="button"></a>' } else { a += '<a href="#" class="closeIcon" title="Close message" role="button"></a>' } if (isSet(k)) { a += '<h2 aria-hidden="true" role="text">' + k.replace(/[<]br[^>]*>/, "") } else { k = "" } } a += '</h2><p aria-hidden="true" role="text">' + l[d] + "</p><br></div>"; c = f[j[d]]; if (d === 0) { c += k + "," } c += l[d].replace(/[<]br[^>]*>/, ","); if (c.indexOf("<") == -1) { g += c } else { g += $("<div>" + c + "</div>").text() } } $("#" + b).html(a); $("#adaMessage").html(g); $(".closeIcon").on("click", function (i) { hideMessage(b); i.preventDefault() }) } } $("#adaMessage").trigger("focus"); if (h === "voiceoverrunning") { setTimeout(function () { h = ""; execute("setTitleAccessibility") }, 2000) } } function hideMessage(b) { var a = $("#" + b); if (a.hasClass("messaging")) { a.removeClass("messaging") } a.addClass("hidden"); a.find(".messageText").addClass("hidden") } function parseBool(a) { if (a == undefined) { return false } if (typeof a != "boolean") { return a.toLowerCase() == "true" ? true : false } else { return a } } function isAlphaNumOnlineIdSpecialChars(a) { var b = /[ !$%^&"'`|<>:\[\]\\]/; if (!b.test(a)) { return true } else { return false } } function isAlphaNumericWithSpaces(a) { var c = String.fromCharCode(a); var b = /^[a-zA-Z0-9 ]+$/; if ((a === null) || (a === 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) { return true } if (b.test(c)) { return true } else { return false } } var pinnedButtons = { movePinnedButtonsAboveKeyboard: function () { pageFooter.removeEvents(); var a = 0; var b; var c = 0; if (pinnedButtons.isLessThaniOS7()) { b = 324; if ($(window).scrollTop() < 1) { c = pageObj.pageModel.innerHeight - window.innerHeight } } else { if (pinnedButtons.isiPhone6()) { b = 394 } else { if (pinnedButtons.isiPhone6plus()) { b = 402 } else { b = 366 } } if (pinnedButtons.isURLBarBig()) { c = 1 } else { c = -25 } } if (navigator.userAgent.toLowerCase().indexOf("iphone") != -1) { if (window.orientation === 0 || window.orientation == 180) { a = screen.height - b } else { if (!pinnedButtons.isURLBarActive()) { a = 75 } else { a = 55 } if (pinnedButtons.isiPhone6()) { if (pinnedButtons.isURLBarActive()) { a = 82 } else { a = 126 } } else { if (pinnedButtons.isiPhone6plus()) { if (pinnedButtons.isURLBarActive()) { a = 124 } else { a = 168 } } } } } if (navigator.userAgent.toLowerCase().indexOf("ipad") != -1) { if (window.orientation === 0 || window.orientation == 180) { a = 575 } else { a = 232 } } $("#btnPin").css({ position: "absolute", top: a + $(window).scrollTop() - c, height: "44px" }) }, isURLBarActive: function () { if (pinnedButtons.isiPhone6()) { return window.innerHeight === 331 } else { if (pinnedButtons.isiPhone6plus()) { return window.innerHeight === 370 } else { return $(window).height() < 209 } } }, isURLBarBig: function () { if (pinnedButtons.isiPhone4()) { return window.innerHeight < 400 } else { return window.innerHeight < 500 } }, isLessThaniOS7: function () { return parseInt(navigator.userAgent.split("/")[3].substring(0, 3), 10) < 7 }, isiOS8: function () { return parseInt(navigator.userAgent.split("/")[3].substring(0, 3), 10) >= 8 }, isiPhone4: function () { return screen.height === 480 }, isiPhone5: function () { return screen.height === 568 }, isiPhone6: function () { return screen.height === 667 }, isiPhone6plus: function () { return screen.height === 736 }, isFullScreenMode: function () { return window.navigator.standalone }, isKeyboardActive: function () { $(window).scrollTop(1); $(window).scrollTop(2); var a = $(window).scrollTop() > 1; $(window).scrollTop(1); return a }, resetButtons: function () { pageFooter.setEvents(); $("#btnPin").css({ position: "fixed", top: "", bottom: "0px", height: "auto" }) } }; function inputFocus(a, b) { if (a === undefined) { a = "div input" } if (globalObj.isIphone && pinnedButtons.isiOS8()) { setInputAttributes($(a), true, true, true, true) } $(a).siblings("a").attr("style", "display: none"); $(a).siblings("a").attr("role", "button"); $(a).siblings("a").attr("title", "Clear text field"); $(a).on("focus", function () { if (parseBool(pageObj.pageModel.handset)) { var d = { activeElement: "" }; d.activeElement = getActiveElement(); if (d.activeElement.length > 0) { execute("getElement", d) } } $(this).on("keyup", function () { var e = $(this).siblings("a"); if (e && $(this).val().length > 0) { $(e).removeAttr("style"); $(e).addClass("clear") } else { $(e).removeClass("clear"); $(e).attr("style", "display: none") } }); var c = $(this).siblings("a"); if (c) { if ($(this).val().length > 0) { $(c).removeAttr("style"); $(c).addClass("clear") } $(c).off("click").on("click", function (f) { $(this).siblings(a).val(""); if (typeof checkFields === "function") { checkFields() } $(this).removeClass("clear"); $(this).attr("style", "display: none"); $(this).siblings(a).trigger("focus"); f.preventDefault() }) } if (typeof b === "undefined" || b === "") { if ((navigator.userAgent.toLowerCase().indexOf("iphone") != -1) || (navigator.userAgent.toLowerCase().indexOf("ipad") != -1)) { if (pinnedButtons.isKeyboardActive() && !pinnedButtons.isFullScreenMode()) { pageObj.pageModel.innerHeight = window.innerHeight; if (pinnedButtons.isiOS8()) { window.scrollTo(0, $(this).offset().top - 35) } setTimeout(function () { pinnedButtons.movePinnedButtonsAboveKeyboard(); $(window).scroll(function () { setTimeout(function () { pinnedButtons.movePinnedButtonsAboveKeyboard() }, 360) }) }, 240) } } } else { b = "" } }); $(a).on("focusout", function () { $("div.inputContainer").removeClass("focus"); if ((navigator.userAgent.toLowerCase().indexOf("iphone") != -1) || (navigator.userAgent.toLowerCase().indexOf("ipad") != -1)) { $(window).unbind("scroll"); window.scrollTo(0, 1); setTimeout(function () { pinnedButtons.resetButtons() }, 120) } }) } function dropDownFocus(a) { if ((navigator.userAgent.toLowerCase().indexOf("iphone") != -1) || (navigator.userAgent.toLowerCase().indexOf("ipad") != -1)) { $(a).on("focus", function () { setTimeout(function () { pinnedButtons.movePinnedButtonsAboveKeyboard(); $(window).scroll(function () { setTimeout(function () { console.log(window.innerHeight); pinnedButtons.movePinnedButtonsAboveKeyboard() }, 360) }) }, 360) }); $(a).on("focusout", function () { $(window).unbind("scroll"); pinnedButtons.resetButtons() }) } } function setInputAttributes(c, d, b, e, a) { if (d) { $(c).attr("autocomplete", "off") } if (b) { $(c).attr("autocorrect", "off") } if (e) { $(c).attr("autocapitalize", "off") } if (a) { $(c).attr("spellcheck", "false") } } function detectSwipeOn(a, b) { var e = 0; var d = false; var c = { threshold: { x: 20, y: 20 }, preventDefaultEvents: true }; if (!a) { return false } return $(a).each(function () { var h = { x: 0, y: 0 }; var f = { x: 0, y: 0 }; function g(l) { h = { x: 0, y: 0 }; f = { x: 0, y: 0 }; d = false; h.x = l.targetTouches[0].pageX; h.y = l.targetTouches[0].pageY } function k(l) { d = true; if (c.preventDefaultEvents) { l.preventDefault() } f.x = l.targetTouches[0].pageX; f.y = l.targetTouches[0].pageY } function i(l) { var m = h.y - f.y; if (m < c.threshold.y && m > (c.threshold.y * -1)) { e = h.x - f.x; if (e > c.threshold.x) { b("swipeLeft") } if (e < (c.threshold.x * -1)) { b("swipeRight") } } if (d == false) { b("noSwipe") } } function j(l) { console.log("Canceling swipe gesture...") } this.addEventListener("touchstart", g, false); this.addEventListener("touchmove", k, false); this.addEventListener("touchend", i, false); this.addEventListener("touchcancel", j, false) }) } function isPhone(a) { a = a.replace(/\s+/g, ""); return a.length > 9 && a.match(/^(1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/) } function isPhoneDigit(b) { var a = String.fromCharCode(b); return !a || a.match(/^\d+$/) } function isEmailCharacter(a) { var c = String.fromCharCode(a); var b = /^[a-zA-Z0-9@\.\-\+_]$/; if ((a == null) || (a == 0) || (a == 8) || (a == 9) || (a == 13) || (a == 27)) { return true } if (b.test(c)) { return true } else { return false } } function getArrayOfObject(a) { if (isSet(a) && !(a instanceof Array)) { a = [a] } if (!isSet(a)) { a = [] } return a };